name: Build Keil2Json Executable

on:
  push:


jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - windows-latest
          - ubuntu-latest
        python-version:
          - "3.9"
        include:
          - os: windows-latest
            script-ext: ".exe"
            pyinstaller-args: "--uac-admin"
          - os: ubuntu-latest
            script-ext: ""
            pyinstaller-args: ""

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Create virtual environment and install dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install pyinstaller

      - name: Create virtual environment and install dependencies (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          python -m venv venv
          venv\Scripts\activate
          pip install pyinstaller
        shell: cmd

      - name: Build Keil2Json executable
        if: matrix.os == 'ubuntu-latest'
        run: |
          source venv/bin/activate
          pyinstaller -F ${{ matrix.pyinstaller-args }} --distpath dist Keil2Json.py
        shell: bash

      - name: Build Keil2Json executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          venv\Scripts\activate
          pyinstaller -F ${{ matrix.pyinstaller-args }} --distpath dist Keil2Json.py
        shell: cmd

      - name: Debug: Check dist directory (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          dir dist
        shell: cmd

      - name: Zip executable
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p output
          cp dist/Keil2Json output/
          zip -r Keil2Json-ubuntu-latest.zip output/
        shell: bash

      - name: Zip executable (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          mkdir output
          copy dist\Keil2Json.exe output\
          cd output
          zip -r ..\Keil2Json-windows-latest.zip *
          cd ..
        shell: cmd

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Keil2Json-${{ matrix.os }}
          path: Keil2Json-${{ matrix.os }}.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      deployments: write
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Merge artifacts into output directory
        run: |
          mkdir -p output
          for file in artifacts/*.zip; do
            unzip "$file" -d output/
          done

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}